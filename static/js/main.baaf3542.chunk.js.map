{"version":3,"sources":["compenet/Score.js","compenet/ControlPlayGame.js","compenet/CardElements.js","compenet/ApiCards.js","compenet/SetRandom.js","compenet/AnimetedCard.js","compenet/RefreshCard.js","back.jpg","App.js","index.js"],"names":["Score","this","props","result","level","score","highScore","highLevel","className","Component","style_playButton","fontSize","position","left","top","transform","ControlPlayGame","theMemory","random","gameState","buttonContent","style","textAlign","color","paddingTop","textShadow","onClick","height","CardElements","prop","id","tag","url","data-key","background","borderRadius","margin","src","alt","width","padding","bottom","ApiCards","statu","SetRandom","cardArr","newCard","length","index","Math","floor","splice","AnimetedCard","element","document","querySelector","setTimeout","RefreshCard","arr","refresh","lents","App","state","scoreLevel","listCard","setRandomCard","setState","children","theGameResult","a","lent","newcard","filter","items","item","game","console","log","map","image","backgroundSize","maxHeight","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.baaf3542.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Score extends Component {\r\n  \r\n  render() {\r\n    let {level, score, highScore, highLevel} = this.props.result;\r\n    \r\n    return (\r\n      <div className='container d-flex flex-wrap col-12 '>\r\n        <div className='col-12 d-flex justify-content-center mt-3'>\r\n        <h1>THE MEMORY GAME CARD</h1>\r\n        </div>\r\n        <div className='col-12 d-flex justify-content-center mt-3'>\r\n        <h3 className='mr-5'>Level : {level} </h3>\r\n        <h3 className='mr-5'>Score : {score} </h3>\r\n        <h3 className='offset-1 mr-5'>HighScore : {highScore} </h3>\r\n        <h3>HighLevel: {highLevel}</h3>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Score\r\n","import React from 'react'\r\nimport Score from './Score'\r\n\r\nlet style_playButton = {fontSize:'1.2em', position:'absolute', left:'50%', top:'50%', transform:'translate(-50%,-50%)'};\r\n\r\nexport default function ControlPlayGame(props) {\r\n\r\n  let {theMemory, random, gameState, result} = props;//distructuring\r\n\r\n  // text on button\r\n  let buttonContent = gameState ==='start'||gameState==='lose'?'New Game':gameState==='win'?`Next Level ${result.level}`:'Play';\r\n\r\n  return (\r\n    <div>\r\n      {gameState==='start'||gameState==='lose'||gameState==='win'\r\n        ?<div style={{textAlign:'center'}}>\r\n          <h1 style={{color:'goldenrod',paddingTop:'25vh',textShadow:'5px 5px 5px black'}}>The Memory Card Game</h1>\r\n          <h3 style={{color:'goldenrod',paddingTop:'5vh',textShadow:'#e27777 2px 3px 5px'}}>{gameState==='lose'?'You Lost Try Again':gameState==='win'?`It Is Win Go To Level ${result.level}`:''}</h3>\r\n          <button onClick={random}\r\n          className='btn btn-warning col-2' style={style_playButton}\r\n          >{buttonContent}</button>\r\n        </div>\r\n        :gameState==='play'\r\n        ?<div key={100}>\r\n          <Score result={result}/>\r\n          <div className='container-fluid col-12 d-flex flex-wrap justify-content-center align-items-center'style={{height:'70vh'}}>\r\n          {theMemory}\r\n          </div>\r\n          </div>\r\n        :<button>level {result.level}</button>\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nconst CardElements = (props) => {\r\n  \r\n  let{id, tag, url} = props.prop;\r\n\r\n  // style of container card\r\n  let style_card = {background:'#7b1010',position:'relative',textAlign:'center',borderRadius:'5px',margin:'5px'};\r\n\r\n  return (//container of Cards\r\n    <div key={id} onClick={()=>{props.result(id)}} className='card col-2' data-key={id} style={style_card} >\r\n\r\n        <img src={url} alt=\"card\" style={{width:'99%',height:'30vh',borderRadius:'10px',padding:'10px 0px 25px'}} />\r\n      \r\n        <h6 style={{width:'100%', position:\"absolute\",left:\"50%\",bottom:'-3px',transform:\"translate(-50%,0)\"}}>{tag}</h6>\r\n      \r\n      </div>\r\n\r\n)\r\n}\r\n\r\nexport default CardElements\r\n","const ApiCards = [\r\n  {\r\n    id:1,\r\n    tag: 'Arthur',\r\n    url:'https://i.pinimg.com/236x/5e/a1/78/5ea178b08f3e5c017475e9723930bc27.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:2,\r\n    tag: 'Bain',\r\n    url:'https://i.pinimg.com/236x/80/bf/8c/80bf8cd26aa8cae8f260d936982156e2.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:3,\r\n    tag: 'Gon',\r\n    url:'https://i.pinimg.com/236x/c5/6b/53/c56b532d0f127912e0e6ddb42494eebe.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:4,\r\n    tag: 'Hisoka',\r\n    url:'https://i.pinimg.com/236x/c4/a7/ec/c4a7ec9f7cc73d75603fb55486430c46.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:5,\r\n    tag: 'Ichgo',\r\n    url:'https://wallpapercave.com/wp/wp2768274.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:6,\r\n    tag: 'Itashi',\r\n    url:'https://i.pinimg.com/236x/4f/d7/d4/4fd7d48b6f67470d6026ceadd6bd91b0.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:7,\r\n    tag: 'Katakuri',\r\n    url:'https://i.pinimg.com/236x/0b/f5/f7/0bf5f7da99153ac7a109053cc4c2d0fe.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:8,\r\n    tag: 'Killua',\r\n    url:'https://i.pinimg.com/236x/7d/47/34/7d473478150df747371bf9ad401a49f0.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:9,\r\n    tag: 'Kurapika',\r\n    url:'https://i.pinimg.com/236x/ab/46/fc/ab46fc7cf10f114b24acdd747be87e4e.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:10,\r\n    tag: 'Mazino',\r\n    url:'https://i.pinimg.com/236x/0d/0b/d1/0d0bd1432beab9409a35e41800ad46b1.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:11,\r\n    tag: 'Nanika',\r\n    url:'https://i.pinimg.com/564x/ef/84/ca/ef84ca584e0b2e72163bb128f82d6609.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:12,\r\n    tag: 'Pito',\r\n    url:'https://i.pinimg.com/236x/b7/95/fc/b795fc246f150820fc7191f63a70f60d.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:13,\r\n    tag: 'Tama',\r\n    url:'https://i.pinimg.com/564x/22/1c/9c/221c9c85dc5f54170abd88fc5499758d.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:14,\r\n    tag: 'Zaraki',\r\n    url:'https://i.pinimg.com/236x/9d/50/89/9d50890e3410094e62a58ab87a12b0a8.jpg',\r\n    statu: true\r\n  },\r\n  {\r\n    id:15,\r\n    tag: 'Zoro',\r\n    url:'https://i.pinimg.com/236x/d8/21/f4/d821f446c45bf6bbbdb801974e26c85e.jpg',\r\n    statu: true\r\n  }\r\n]\r\n\r\nexport default ApiCards","import ApiCards from './ApiCards'\r\n\r\nconst SetRandom = (level) => {\r\n\r\n  let cardArr = [...ApiCards];//assignment all card\r\n  let newCard = [];//new empty array to sort the random card\r\n  let length = 2+level*2;//how much the card display\r\n\r\n  if(length>15)length=15;//control the max cards can display\r\n\r\n\r\n  for (let index = 0; index < length; index++) {//loop to make card for playing\r\n\r\n    let random = Math.floor(Math.random()*cardArr.length);//get radom number not great then linght of array\r\n\r\n    newCard[index]=cardArr.splice(random,1);//sort the card in empty array\r\n    newCard[index][0].statu=true;// tag is indeed true\r\n  }\r\n\r\n  // let theMemory = newCard.map((item, index) =>{\r\n  //   console.log(item[0].id)\r\n  // })\r\n  return <div>\r\n    {newCard}\r\n  </div>\r\n}\r\n\r\nexport default SetRandom\r\n","const AnimetedCard = (id) => {\r\n  \r\n  let element = document.querySelector(`[data-key='${id}']`);\r\n  if(element)element.style.transform='rotateY(180deg)'\r\n\r\n  setTimeout(()=>{\r\n    if(element)element.style.transform='rotateX(0deg)'\r\n  },300)\r\n\r\n}\r\n\r\nexport default AnimetedCard;","const RefreshCard = (arr) => {\r\n\r\n  let refresh = [];// new array\r\n\r\n  let lents = arr.length;// count number of cards\r\n\r\n  for (let index = 0; index < lents; index++) {// loop on all item\r\n\r\n    let random = Math.floor(Math.random()*arr.length);//get radom number not great then linght of array\r\n\r\n    // assign the value to the new array\r\n    refresh[index] = arr[random];\r\n\r\n    // remove from the root array\r\n    arr.splice(random,1);\r\n\r\n  }\r\n\r\n  return refresh;\r\n\r\n}\r\nexport default RefreshCard;","export default __webpack_public_path__ + \"static/media/back.74ad889c.jpg\";","import './App.css';\nimport React, {Component} from \"react\";\nimport ControlPlayGame from './compenet/ControlPlayGame'\n// import ApiCards from './compenet/ApiCards'\nimport CardElements from './compenet/CardElements';\nimport SetRandom from './compenet/SetRandom';\nimport AnimetedCard from './compenet/AnimetedCard';\nimport RefreshCard from './compenet/RefreshCard';\nimport image from './back.jpg'\n\n\nclass App extends Component {\n  \n  state = {\n    score:0,\n    scoreLevel:0,\n    highScore:0,\n    level:1,\n    highLevel:0,\n    gameState:'start',\n    listCard:[]\n  }\n\n  // get cards\n  setRandomCard = () => {\n\n    let {level} = this.state;\n\n    // set state to start play\n    this.setState({gameState:'play'})\n\n    // save the card on state listCard\n    this.setState({ listCard: SetRandom(level).props.children })\n\n  }\n\n  // detecte the result of game\n  theGameResult = async(id) => {\n    \n    let {score, gameState, level, highScore, highLevel, listCard, scoreLevel} = this.state;//distructuring\n    let lent = listCard.length;// length\n    let newcard = [...listCard];//assignment\n\n    AnimetedCard(id);\n\n      setTimeout(()=>{\n\n      listCard.filter((items,index) => {// looping to find the id\n\n      let item = items[0];\n\n      if(item.id===id){// is same id\n\n        if(item.statu){//the card never clicked\n        \n          newcard[index][0].statu=false; // mark was clicked\n\n          if(scoreLevel===lent-1){// check win in this level\n            \n            this.setState({gameState:'win'})//set statu\n            this.setState({level: level + 1, score: score + 1, scoreLevel: 0})// set new level\n            \n          }else{// not win yet\n\n            this.setState({score:score + 1,scoreLevel: scoreLevel + 1})// increment the score\n\n          }\n        }else{// the card was clicked then is lost\n\n          if(score>highScore)this.setState({highScore:score})//set high score\n          if(level>highLevel)this.setState({highLevel:level})//set high level\n          \n          this.setState({score: 0,level:1,gameState:'lose',scoreLevel:0})\n\n        }\n\n      }\n        return gameState // eslink ask the return\n    })\n\n    //save the the change in state (listCard)\n    let game = RefreshCard(listCard);\n    if(game.length !== 0){\n      this.setState({listCard: game})\n    }\n    \n    console.log(game)\n\n  },1000)\n  \n  }\n\n  render(){\n\n    //maping cards\n    let theMemory = this.state.listCard.map((item) =>{\n\n      return (<CardElements prop={item[0]} result={this.theGameResult} />)\n    })\n\n    return (\n      \n      <div className=\"App\" style={{background: `url(${image})`,backgroundSize:'cover',height:'100vh',maxHeight:'120vh'}} >\n         \n        <ControlPlayGame theMemory={theMemory} random={this.setRandomCard} gameState={this.state.gameState} result={this.state} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}